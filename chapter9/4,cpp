#include <iostream>
using namespace std;

class LoopAdder
{
	string name;
	int x, y, sum;
	void read();
	void write();
protected:
	LoopAdder(string name = "") { this->name = name; }
	int getX() { return x; }
	int getY() { return y; }
	virtual int calculate() = 0;
public:
	void run();
};

void LoopAdder::read()
{
	cout << name << ":" << endl;
	cout << "처음 수에서 두번째 수까지 더합니다. 두 수를 입력하세요. >> ";
	cin >> x >> y;
}

void LoopAdder::write()
{
	cout << x << "에서 " << y << "까지의 합 = " << sum << "입니다. " << endl;
}

void LoopAdder::run()
{
	read();
	sum = calculate();
	write();
}

class whileLoopAdder : public LoopAdder
{
protected:
	string name;
public:
	whileLoopAdder(string name) : LoopAdder(name) { this->name = name; }
	int calculate();
};

int whileLoopAdder::calculate()
{
	int x = getX();
	int y = getY();
	int sum{};

	while (1)
	{
		sum += x;
		x++;
		if (x == y + 1)
			break;
	}

	return sum;
}

class DoWhileLoopAdder : public LoopAdder
{
protected:
	string name;
public:
	DoWhileLoopAdder(string name) : LoopAdder(name) { this->name = name; }
	int calculate();
};

int DoWhileLoopAdder::calculate()
{
	int x = getX();
	int y = getY();
	int sum{};

	do {

		sum += x;
		x++;
		if (x == y + 1)
			break;

	} while (1);
	
	return sum;
}

int main()
{
	whileLoopAdder whileLoop("While Loop");
	DoWhileLoopAdder doWhileLoop("Do While Loop");

	whileLoop.run();
	doWhileLoop.run();
}
